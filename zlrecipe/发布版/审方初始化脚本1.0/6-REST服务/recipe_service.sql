-- Generated by Oracle SQL Developer REST Data Services 17.2.0.188.1159
-- Exported REST Definitions from ORDS Schema Version 18.1.1.95.1251
-- Schema: ZLRECIPE   Date: Wed Aug 29 11:52:13 CST 2018
--
BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'ZLRECIPE',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'zlrecipe',
      p_auto_rest_auth      => FALSE);    

  ORDS.DEFINE_MODULE(
      p_module_name    => 'recipe',
      p_base_path      => '/recipe/',
      p_items_per_page =>  25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);      
  ORDS.SET_MODULE_ORIGINS_ALLOWED(
      p_module_name     => 'recipe',
      p_origins_allowed => 'http://192.168.9.142');      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'recipe',
      p_pattern        => 'allresult',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'recipe',
      p_pattern        => 'allresult',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'declare
l_cursor Sys_Refcursor;
begin



  pkg_recipe_reviewe.get_recipes_reviewe_result_ALL(pid_in => :pid,
                                                pvid_in => :pvid,
                                                resultout => l_cursor);

end;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'recipe',
      p_pattern            => 'allresult',
      p_method             => 'GET',
      p_name               => 'pid',
      p_bind_variable_name => 'pid',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'recipe',
      p_pattern            => 'allresult',
      p_method             => 'GET',
      p_name               => 'pvid',
      p_bind_variable_name => 'pvid',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'recipe',
      p_pattern        => 'getenabledept',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'recipe',
      p_pattern        => 'getenabledept',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_items_per_page =>  200,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'SELECT xmlagg(xmlparse(content DEPT_ID||'','' wellformed) order by '''').getclobval() dept_ids
  FROM REVIEWE_DEPT where DEPT_STATUS=1'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'recipe',
      p_pattern        => 'receive',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'recipe',
      p_pattern        => 'receive',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => 'application/json',
      p_comments       => NULL,
      p_source         => 
'declare
l_blob blob ;
c_clob clob;
begin
l_blob:=:body;
c_clob:=wwv_flow_utilities.blob_to_clob(l_blob);

Pkg_Recipe_Reviewe.Receive_recipes(c_clob);

end;'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'recipe',
      p_pattern        => 'refuse',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'recipe',
      p_pattern        => 'refuse',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'declare
l_blob blob ;
c_clob clob;
begin
l_blob:=:body;
c_clob:=wwv_flow_utilities.blob_to_clob(l_blob);
--insert into Recipe_Reviewe_Log (Log_Time,Log_Title,Log_Comment) values (sysdate,''HIS调用医生拒绝测试'',c_clob);
Pkg_Recipe_Reviewe.UPD_DR_REFUSE_COMMENT(c_clob);

end;'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'recipe',
      p_pattern        => 'result',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'recipe',
      p_pattern        => 'result',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'declare
l_cursor Sys_Refcursor;
begin



  pkg_recipe_reviewe.get_recipes_reviewe_result(pid_in => :pid,
                                                pvid_in => :pvid,
                                                resultout => l_cursor);

end;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'recipe',
      p_pattern            => 'result',
      p_method             => 'GET',
      p_name               => 'pid',
      p_bind_variable_name => 'pid',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'recipe',
      p_pattern            => 'result',
      p_method             => 'GET',
      p_name               => 'pvid',
      p_bind_variable_name => 'pvid',
      p_source_type        => 'URI',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      


  COMMIT; 
END;