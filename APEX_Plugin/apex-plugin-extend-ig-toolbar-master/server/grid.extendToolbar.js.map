{"version":3,"names":[],"mappings":"","sources":["grid.extendToolbar.js"],"sourcesContent":["/*!\n * apex-plugin-extendigtoolbar - Oracle APEX plugin\n * @author Marko Goricki\n * @version v1.0.0\n * @link https://github.com/mgoricki/apex-plugin-extend-ig-toolbar\n * @license MIT\n */\n/*\n * ChageLog:\n * v1.0.0 - 20171101 - Initial Release\n * v1.0.2 - 20180312 - fix for adding buttons to multiple IG regions on same page (fix for APEX 5.1.4) - more on https://community.oracle.com/message/14739371#14739371\n */\nvar extendGridToolbar = {\n\n  // Init Function\n  init: function(){\n    var da = this;\n    apex.debug.log('extendGridToolbar.init',da);\n\n    // get plugin attributes\n    var vGroup        = da.action.attribute01;\n    var vPosition     = da.action.attribute02; // F - first, L - last\n    var vLabel        = da.action.attribute03;\n    var vHot          = da.action.attribute04 == 'Y' ? true : false;\n    var vIcon         = da.action.attribute05;\n    var vIconOnly     = da.action.attribute06 == 'Y' ? true : false;\n    var vIconPosition = da.action.attribute07 == 'B' ? true : false;\n    var vTitle        = da.action.attribute08;\n    var vAction       = da.action.attribute09; // action\n    var vDisabled     = da.action.attribute10 == 'Y' ? true : false; // disable\n    var vHidden       = da.action.attribute11 == 'Y' ? true : false; // hidden\n\n    // get Region\n    var vRegionId = da.affectedElements[0].id;\n    var vRegion$ = apex.jQuery(da.affectedElements[0]);\n\n    // check icon\n    // toDo: check if there's already fa class\n    if (vIcon){\n      vIcon = 'fa '+vIcon;\n    }  \n\n    var vActionName = 'my-custom-action';\n    // Get Widget\n    var vWidget$ = apex.region(vRegionId).widget();\n\n    // Grid created\n    var toolbar = vWidget$.interactiveGrid(\"getToolbar\");\n\n    // find toolbar group - commented for fix v1.0.2\n    // var toolbarGroup = toolbar.toolbar('findGroup', vGroup);\n\n    var vaButton = {\n      type: 'BUTTON',\n      label: vLabel,\n      title: vTitle,\n      labelKey: vLabel, // label from text messages\n      action: vAction,\n      icon: vIcon,\n      iconOnly: vIconOnly,\n      iconBeforeLabel: vIconPosition,\n      hot: vHot\n    };\n\n    // v1.0.2 Fix for APEX 5.1.4         \n    let config = $.extend(true, {}, toolbar.toolbar('option'))    \n    var toolbarData = config.data;\n    var toolbarGroup = toolbarData.filter(function (group) {  \n      return group.id === vGroup  \n    })[0]  \n    if (toolbarGroup) {  \n      if (vPosition == 'F'){\n        toolbarGroup.controls.unshift(vaButton)\n      }else{\n        toolbarGroup.controls.push(vaButton);\n      };      \n    }  \n\n    toolbar.toolbar('option', 'data', config.data);  \n\n    // v1.0.2 (from APEX version 5.2)\n    /*\n    if (vPosition == 'F'){\n      toolbarGroup.controls.unshift(vaButton)\n    }else{\n      toolbarGroup.controls.push(vaButton);\n    };\n    */\n\n  \n\n    // add actions\n    var vActions = vWidget$.interactiveGrid('getActions');\n\n    // check if action exists, then just assign it\n    var vAction$ = vActions.lookup(vAction);\n    if(!vAction$){\n      vActions.add(\n        {\n          name   : vAction\n        , action : function(event, element) {\n            apex.event.trigger(vRegion$, vAction);\n         }\n        , hide:vHidden\n        , disabled:vDisabled\n       });\n     }else{\n       vAction$.hide = vHidden;\n       vAction$.disabled = vDisabled;\n     }\n\n\n    // refresh grid\n    toolbar.toolbar('refresh');\n  }\n};\n\n//# sourceMappingURL=grid.extendToolbar.js.map\n"],"file":"grid.extendToolbar.js"}